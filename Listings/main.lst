C51 COMPILER V9.54   MAIN                                                                  08/25/2022 21:10:48 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\build\main.obj
COMPILER INVOKED BY: D:\development\singleChip51\KeilC51\C51\BIN\C51.EXE src\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJEC
                    -TEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\build\main.obj)

line level    source

   1          /**
   2           * @file main.c
   3           * @author USST WangYJ (2035060326)
   4           * @brief
   5           * @version 0.1
   6           * @date 2022-08-25
   7           *
   8           * @copyright Copyright (c) 2022
   9           *
  10           */
  11          
  12          #include <REGX52.H>
  13          #include "Driver_AT24C02.h"
  14          #include "Driver_LCD1602.h"
  15          #include "Driver_DS18B20.h"
  16          #include "Delay.h"
  17          #include "GetKey.h"
  18          #include "Timer.h"
  19          #include "UART.h"
  20          
  21          #define MAXTEMP 125
  22          #define MINTEMP -55
  23          
  24          float T, TempShow;
  25          char TempLowThreshold, TempHighThreshold;
  26          unsigned char KeyNum;
  27          unsigned char TemperatureCache[60];
  28          unsigned char TempCacheTop = 0;
  29          unsigned char IndexUpperBoundary;
  30          
  31          /**
  32           * @brief Initialize. Call it at the beginning of main().
  33           *
  34           */
  35          void Init()
  36          {
  37   1        LCD_Init();
  38   1        LCD_ShowString(1, 1, "Loading...");
  39   1      
  40   1        // Getting temperature threshold from AT24C02
  41   1        TempHighThreshold = AT24C02_ReadByte(0);
  42   1        TempLowThreshold = AT24C02_ReadByte(1);
  43   1      
  44   1        // Recover Thresholds if they are invalid.
  45   1        if (TempHighThreshold > 125 || TempLowThreshold < -55 || TempLowThreshold >= TempHighThreshold)
  46   1        {
  47   2          TempHighThreshold = 20;
  48   2          TempLowThreshold = 15;
  49   2          AT24C02_WriteByte(0, TempHighThreshold);
  50   2          Delayms(5);
  51   2          AT24C02_WriteByte(1, TempLowThreshold);
  52   2          Delayms(5);
  53   2        }
  54   1      
C51 COMPILER V9.54   MAIN                                                                  08/25/2022 21:10:48 PAGE 2   

  55   1        // UI based on LCD1605
  56   1        LCD_ShowString(2, 1, "H:");
  57   1        LCD_ShowString(2, 8, "L:");
  58   1        LCD_ShowSignedNum(2, 3, TempHighThreshold, 3);
  59   1        LCD_ShowSignedNum(2, 11, TempLowThreshold, 3);
  60   1      
  61   1        // Convert Temperature is necessary here. Or the data read may be wrong because of time sequence error.
  62   1        DS18B20_ConvertT();
  63   1        Delayms(1000);
  64   1      
  65   1        Timer0Init();
  66   1        UART_Init();
  67   1        LCD_ShowString(2, 1, "                ");
  68   1      }
  69          
  70          /**
  71           * @brief Show the temperature on LCD1602.
  72           *
  73           */
  74          void ShowTemp()
  75          {
  76   1        DS18B20_ConvertT();
  77   1        T = DS18B20_ReadT();
  78   1        if (T < 0)
  79   1        {
  80   2          LCD_ShowChar(1, 6, '-');
  81   2          TempShow = -T;
  82   2        }
  83   1        else
  84   1        {
  85   2          LCD_ShowChar(1, 6, ' ');
  86   2          TempShow = T;
  87   2        }
  88   1        LCD_ShowNum(1, 7, TempShow, 3);
  89   1        LCD_ShowChar(1, 10, '.');
  90   1        LCD_ShowNum(1, 11, (unsigned long)(TempShow * 100) % 100, 2);
  91   1      }
  92          
  93          /**
  94           * @brief Modify the temperature threshold when certain keys(1,2,3 and 4) are pressed.
  95           *
  96           */
  97          void ModifyTemp()
  98          {
  99   1        if (KeyNum > 0 && KeyNum < 10)
 100   1        {
 101   2          if (KeyNum == 1)
 102   2          {
 103   3            TempHighThreshold++;
 104   3            P2_4 = 0;
 105   3            if (TempHighThreshold > MAXTEMP)
 106   3            {
 107   4              TempHighThreshold = MAXTEMP;
 108   4            }
 109   3          }
 110   2          if (KeyNum == 2)
 111   2          {
 112   3            TempHighThreshold--;
 113   3            if (TempHighThreshold <= TempLowThreshold)
 114   3            {
 115   4              TempHighThreshold++;
 116   4            }
C51 COMPILER V9.54   MAIN                                                                  08/25/2022 21:10:48 PAGE 3   

 117   3          }
 118   2          if (KeyNum == 3)
 119   2          {
 120   3            TempLowThreshold++;
 121   3            if (TempLowThreshold >= TempHighThreshold)
 122   3            {
 123   4              TempLowThreshold--;
 124   4            }
 125   3          }
 126   2          if (KeyNum == 4)
 127   2          {
 128   3            TempLowThreshold--;
 129   3            if (TempLowThreshold < MINTEMP)
 130   3            {
 131   4              TempLowThreshold = MINTEMP;
 132   4            }
 133   3          }
 134   2          LCD_ShowString(2, 1, "TH:");
 135   2          LCD_ShowString(2, 9, "TL:");
 136   2          LCD_ShowSignedNum(2, 4, TempHighThreshold, 3);
 137   2          LCD_ShowSignedNum(2, 12, TempLowThreshold, 3);
 138   2          AT24C02_WriteByte(0, TempHighThreshold);
 139   2          Delayms(5);
 140   2          AT24C02_WriteByte(1, TempLowThreshold);
 141   2          Delayms(65);
 142   2          LCD_ShowString(2, 1, "                ");
 143   2        }
 144   1      }
 145          
 146          /**
 147           * @brief Check if the Temperature is acceptable.
 148           *
 149           */
 150          void ThresholdCheck()
 151          {
 152   1        if (T > TempHighThreshold)
 153   1        {
 154   2          LCD_ShowString(2, 1, "Too Hot");
 155   2        }
 156   1        else if (T < TempLowThreshold)
 157   1        {
 158   2          LCD_ShowString(2, 1, "Too Cold");
 159   2        }
 160   1        else if (T >= TempLowThreshold)
 161   1        {
 162   2          LCD_ShowString(2, 1, "        ");
 163   2        }
 164   1        else
 165   1        {
 166   2          LCD_ShowString(2, 1, "                ");
 167   2        }
 168   1      }
 169          
 170          /**
 171           * @brief Save the Temperature data in the buffer into AT24C02 when key 16 is pressed. And Upload it throu
             -gh UART to PC when key 12 is pressed/
 172           *
 173           */
 174          void SaveAndUpload()
 175          {
 176   1        unsigned char cnt;
 177   1        if (KeyNum == 16)
C51 COMPILER V9.54   MAIN                                                                  08/25/2022 21:10:48 PAGE 4   

 178   1        {
 179   2          IndexUpperBoundary = TempCacheTop;
 180   2          LCD_Clear();
 181   2          Delayms(5);
 182   2          LCD_ShowString(1, 1, "Saving...");
 183   2          for (cnt = 0; cnt < IndexUpperBoundary; ++cnt)
 184   2          {
 185   3            AT24C02_WriteByte(cnt + 3, TemperatureCache[cnt]);
 186   3            Delayms(5);
 187   3          }
 188   2          LCD_Clear();
 189   2          LCD_ShowString(1, 1, "Temp:");
 190   2        }
 191   1        else if (KeyNum == 12)
 192   1        {
 193   2          LCD_Clear();
 194   2          Delayms(5);
 195   2          LCD_ShowString(1, 1, "Uploading...");
 196   2          for (cnt = 0; cnt < IndexUpperBoundary; ++cnt)
 197   2          {
 198   3            unsigned char temp = AT24C02_ReadByte(cnt + 3);
 199   3            Delayms(5);
 200   3            UART_SendByte(temp);
 201   3            Delayms(1);
 202   3          }
 203   2          LCD_Clear();
 204   2          LCD_ShowString(1, 1, "Temp:");
 205   2        }
 206   1      }
 207          
 208          void main()
 209          {
 210   1        Init();
 211   1        LCD_ShowString(1, 1, "Temp:");
 212   1      
 213   1        while (1)
 214   1        {
 215   2          ShowTemp();
 216   2      
 217   2          KeyNum = Key();
 218   2          ModifyTemp();
 219   2      
 220   2          ThresholdCheck();
 221   2          SaveAndUpload();
 222   2        }
 223   1      }
 224          
 225          void T0_Int() interrupt 1
 226          {
 227   1        static unsigned int T0Count, saveCount;
 228   1        TL0 = 0x66;
 229   1        TH0 = 0xFC;
 230   1        T0Count++;
 231   1        saveCount++;
 232   1        if (T0Count >= 20)
 233   1        {
 234   2          T0Count = 0;
 235   2          Key_Loop();
 236   2        }
 237   1        if (saveCount >= 1000)
 238   1        {
 239   2          saveCount = 0;
C51 COMPILER V9.54   MAIN                                                                  08/25/2022 21:10:48 PAGE 5   

 240   2          if (TempCacheTop >= 60)
 241   2            TempCacheTop = 0;
 242   2          TemperatureCache[TempCacheTop++] = T;
 243   2        }
 244   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    977    ----
   CONSTANT SIZE    =     97    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     77       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
